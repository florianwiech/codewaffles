name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - run: yarn install --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn check:types
      - run: yarn lint:ci

  test:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          retention-days: 5

  e2e:
    timeout-minutes: 60
    runs-on: macos-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build
      - run: yarn install --frozen-lockfile
      - run: npx playwright install --with-deps
      - run: yarn e2e
      - uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: playwright-report
          retention-days: 3

  make:
    if: github.event_name == 'pull_request'
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build
      - run: yarn install --frozen-lockfile
      - run: yarn run make --publish never
        env:
          IS_PULL_REQUEST: true
          CSC_LINK: ${{ secrets.MACOS_CERT_P12 }}
          CSC_KEY_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}
      - uses: actions/upload-artifact@v4
        with:
          name: make-${{ matrix.os }}
          path: |
            build
            dist
          retention-days: 3

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint, test, build, e2e]
    outputs:
      version: ${{ steps.semantic-release.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: npx semantic-release
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: <>
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: <>

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.release.outputs.version != null
    needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - macOS-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build
      - run: yarn install --frozen-lockfile
      - name: Adapt new release version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "<>"
          yarn version --new-version ${{ needs.release.outputs.version }}
      - run: yarn run make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.MACOS_CERT_P12 }}
          CSC_KEY_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}
